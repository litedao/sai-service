#! /usr/bin/env node

const mongoose = require('./schema.js').mongoose;
const settings = require('./settings');
const { exec } = require('child_process');

let network = 'main';
process.argv.forEach(function (v, i) {
  if (v === '--network' && typeof process.argv[i + 1] !== 'undefined') {
    network = process.argv[i + 1];
  }
});

console.log(`Cleaning DB sai-service-${network}-${settings.version}...`);

mongoose.connect(`mongodb://localhost/sai-service-${network}-${settings.version}`, { useMongoClient: true }, (e, db) => {
  const deleteDB = (name) => {
    return new Promise((resolve, reject) => {
      db.collection(name).drop((e, r) => {
        resolve(e || !r ? `${name} collection not found` : `${name} collection deleted`);
      });
    });
  }
  if (!e) {
    const promises = [deleteDB('vars'), deleteDB('pips'), deleteDB('peps'), deleteDB('ways'), deleteDB('mats'), deleteDB('pers'), deleteDB('cups'), deleteDB('cuphistoryactions')];
    Promise.all(promises).then((r) => {
      r.forEach(value => console.log(value));
      process.exit();
    });
  }
});
